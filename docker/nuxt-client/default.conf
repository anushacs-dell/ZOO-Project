<VirtualHost *:80>
	# The ServerName directive sets the request scheme, hostname and port that
	# the server uses to identify itself. This is used when creating
	# redirection URLs. In the context of virtual hosts, the ServerName
	# specifies what hostname must appear in the request's Host: header to
	# match this virtual host. For the default virtual host (this file) this
	# value is not decisive as it is used as a last resort host regardless.
	# However, you must set it for any further virtual host explicitly.
	#ServerName www.example.com

	ServerName zoo.something.com
	ServerAdmin webmaster@localhost
	DocumentRoot /var/www/html
	AllowEncodedSlashes On

	# Available loglevels: trace8, ..., trace1, debug, info, notice, warn,
	# error, crit, alert, emerg.
	# It is also possible to configure the loglevel for particular
	# modules, e.g.
	#LogLevel info ssl:warn

	#ErrorLog ${APACHE_LOG_DIR}/error.log
	#CustomLog ${APACHE_LOG_DIR}/access.log combined
	ErrorLog /dev/stderr
	TransferLog /dev/stdout
	SetEnv	MAPSERVER_CONFIG_FILE /mapserver/etc/mapserver.conf

	<Directory "/usr/lib/cgi-bin">
		Options FollowSymLinks
	</Directory>

	# For most configuration files from conf-available/, which are
	# enabled or disabled at a global level, it is possible to
	# include a line for only one particular virtual host. For example the
	# following line enables the CGI configuration for this host only
	# after it has been globally disabled with "a2disconf".
	#Include conf-available/serve-cgi-bin.conf

	# Keycloak OIDC Configuratin
	OIDCProviderMetadataURL https://auth.geolabs.fr/realms/zooproject/.well-known/openid-configuration
	OIDCRedirectURI /
	OIDCClientID apache
	OIDCClientSecret FhFQhGOVXRIx2VxSYG8XzP2huIqGiHlB
	OIDCCryptoPassphrase FhFQhGOVXRIx2VxSYG8XzP2huIqGiHlB
	OIDCRemoteUserClaim email
	OIDCScope "openid email"
	OIDCProviderTokenEndpointAuth client_secret_basic
	OIDCOAuthVerifyJwksUri https://auth.geolabs.fr/realms/zooproject/protocol/openid-connect/certs

	#OIDCProviderMetadataURL http://192.168.1.47:8099/realms/zooproject/.well-known/openid-configuration

	# OIDCProviderIssuer https://192.168.1.47:8099/realms/zooproject/.well-known/openid-configuration
	# OIDCProviderTokenEndpoint https://192.168.1.47:8099/realms/zooproject/protocol/openid-connect/token
	# OIDCOAuthClientID apache
	# OIDCClientID apache
	# OIDCOAuthClientSecret 14d7T5LOkBZWAt2MfB80tRBTAqSb4hSS
	# OIDCClientSecret 14d7T5LOkBZWAt2MfB80tRBTAqSb4hSS

	# Validate Access Tokens using introspection
	# OIDCOAuthIntrospectionEndpoint https://192.168.1.47:8099/realms/zooproject/protocol/openid-connect/token/introspect
	# OIDCOAuthIntrospectionEndpointAuth client_secret_basic

	# OIDCProviderAuthorizationEndpoint https://192.168.1.47:8099/realms/zooproject/protocol/openid-connect/auth

	# Disable Redirects (Set an arbitrary value for the redirect URI)
	# OIDCRedirectURI "/"

	# Crypto Passphrase for securing sensitive data
	# OIDCCryptoPassphrase zooproject

	# <Location "/ogc-api/processes">
    # 	AuthType oauth20
    # 	AuthName "Protected Resource"
    # 	Require valid-user
	# </Location>

	<Location "/ogc-api/jobs">
    	AuthType oauth20
		#AuthType openid-connect
    	AuthName "Protected Resource"
    	Require valid-user
	</Location>

	# <Location "/ogc-api/stac">
    # 	AuthType oauth20
    # 	AuthName "Protected Resource"
    # 	Require valid-user
	# </Location>

	# <Location "/ogc-api/raster">
    # 	AuthType oauth20
    # 	AuthName "Protected Resource"
    # 	Require valid-user
	# </Location>

</VirtualHost>
